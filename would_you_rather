#!/usr/bin/env ruby
require 'highline/import'

require_relative "lib/environment"

menu_prompt = <<EOS
1. Add a scenario
2. List all scenarios
3. Exit
EOS

if ARGV.empty?
  ChoicesController.new().quiz
elsif ARGV.size == 1 and ARGV[0] == "results"
  ChoicesController.new().index
elsif ARGV.size == 1 and ARGV[0] == "manage"
  loop do
    choose do |menu|
      menu.prompt = ""

      scenarios_controller = ScenariosController.new
      menu.choice('Add a scenario') do
        loop do
          user_input = ask("What scenario would you like to add?")
          response = scenarios_controller.add(user_input)
          say(response) unless response.nil?
          if /has\sbeen\sadded$/.match(response)
            break
          end
        end
      end
      menu.choice('List all scenarios') do
        # Let's consider how acting on an scenario changes UX
        # I.E. The program will no longer just exit
        scenarios_controller.index
      end
      menu.choice('Exit') do
        say("Peace Out!\n")
        exit
      end
    end
  end
else
  puts "[Help] Run as: ./would_you_rather manage"
end
